#!/bin/bash
#
# A sample config file for DoCIF
#
# This is just a shell file that is sourced by all the DoCIF scripts.

# A docker baseimage repostiory
# REQUIRED, as of now.
BASEIMAGE_REPO="jgkamat/vipaint-baseimage"

# The github repository location
# REQUIRED for API status.
GITHUB_REPO='jgkamat/vipaint'

# The url to point to when a status check is pending.
# Optional, will point to https://github.com/jgkamat/DoCIF if empty.
PENDING_URL="https://github.com/jgkamat/DoCIF"

############################## Variable Names ##################################

# These are the variables that will hold secrets and such.
# In this example, DOCKER_PASS needs to be set to the docker hub password
# This can be done through the CircleCi GUI or Travis CI secrets
DOCKER_PASSWORD_VAR="DOCKER_PASS"
DOCKER_EMAIL_VAR="DOCKER_EMAIL"
DOCKER_USER_VAR="DOCKER_USER"
# This would be insecure
# DOCKER_EMAIL="spam@gmail.com"

################################################################################

# Status token is used for updating status
GH_STATUS_TOKEN_VAR="GH_STATUS"
# Username of the Status Token
GH_USER_VAR="GH_USER"

# Cache directories, not required.
# Directories to link to the docker container for each build. Add to circle.yml
# for caching on their servers
# DO NOT USE ~, USE ${HOME} INSTEAD (IN SINGLE QUOTES).
CACHE_DIRECTORIES=()
CACHE_DIRECTORIES+=('${HOME}/.ccache')


################################# COMMANDS #####################################

# The script to set up the environment, by default ubuntu.
SETUP_COMMAND="apt-get update && apt get upgrade"
# SETUP_COMMAND="./ubuntu-setup-script"

# DOCIF can cache baseimages, if you give it files that will force a rebuild if changed.
# Include the setup script itself, as well as any dependency files
# Leaving this blank will turn off caching
SETUP_SHA_FILES=()
# SETUP_SHA_FILES+=("./util/ubuntu-setup")

# Environmental variables to make available to the build environment
ENV_VARS=()
ENV_VARS+=("GH_PUSH_TOKEN")  # To be used by autoupdating script

# Commands to run when testing. Each index will have it's own status token
# Commands are in this format
# COMMAND; SHORT_NAME; DESCRIPTION
TEST_COMMANDS=()
TEST_COMMANDS+=("make;compile;A test to see if the code compiles")
TEST_COMMANDS+=("make test-cpp;test-cpp;A test to see if the code passes cpp tests") #

# REQUIRED: Clean command. Cleans the build files so there is no way the previous build can interfere.
CLEAN_COMMAND="make clean"
# Other options are `gradle clean`, `mvn clean`, or `rm -rf build`

# API updating command/script.
# API_AUTOUPDATE_COMMAND="./autoupdate-api"

################################################################################
